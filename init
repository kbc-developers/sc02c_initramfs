#!/sbin/busybox sh

# setup env
export DEV_BLOCK_ZIMAGE=/dev/block/mmcblk0p5
export DEV_BLOCK_RECOVERY=/dev/block/mmcblk0p6
export DEV_BLOCK_CACHE=/dev/block/mmcblk0p7
export DEV_BLOCK_FACTORYFS=/dev/block/mmcblk0p9
export DEV_BLOCK_DATA=/dev/block/mmcblk0p10
export DEV_BLOCK_SDCARD=/dev/block/mmcblk0p11
export DEV_BLOCK_HIDDEN=/dev/block/mmcblk0p12
export DEV_BLOCK_EMMC1=/dev/block/mmcblk1p1
export DEV_BLOCK_EMMC2=/dev/block/mmcblk1p2
export DEV_BLOCK_EMMC3=/dev/block/mmcblk1p3

PATH_=$PATH
export PATH=/sbin

# extract block device files
tar xf /misc/dev.tar

mount -t proc proc /proc
RECOVERY_MODE=`grep -c bootmode=2 /proc/cmdline`
umount /proc

#foce single boot mode
IS_MODE=1

#check multi mode
if [ "$IS_MODE" = '0' ]; then
  #single boot mode
  mkdir /system
  mkdir /data
  chmod 0771 /data
  RECOVERY_SH=/mbs/init.recovery.sh
  NORMAL_SH=/mbs/init.normal.sh
else
  #mbs mode
  mkdir /xdata
  #RECOVERY_SH=/mbs/init.recovery.multi.sh
  RECOVERY_SH=/mbs/init.recovery.sh
  NORMAL_SH=/mbs/init.normal.multi.sh

  cp /mbs/swrom /sbin
fi

#check boot mode
if [ "$RECOVERY_MODE" = '1' ]; then
  # recovery mode
  sh $RECOVERY_SH
else
  sh $NORMAL_SH
fi

# cleanup
rm -rf /dev/* /misc/dev.tar

# init start
mv /_init /init

export PATH=$PATH_
exec /init

